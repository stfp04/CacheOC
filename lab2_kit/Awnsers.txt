3.1)
a)The processor events to be analysed during the programâ€™s execution are: 
The L1 Cache Data Cache Misses, declared in the code through the EventSet. L1 Data Cache Misses counts the number of times the processor fails to find the relevant data on the L1 cache, increasing with each cache miss.
The clock cycles, through the PAPI_get_real_cyc function from the PAPI library, representing the amount of cycles needed to execute the specific stretch of code.
The processing time, represented in microseconds and through the PAPI_get_real_usec function, which measures the length of time passed as the processor executes the code.

3.1.1)
c)

1)Based on the obtained results we can determine the size of the L1 Data Cache to be 32Kb, given that for cache sizes larger than this (in this case 64KB), the cache consists of only misses, represented in the plot by the sarp
increase in time, meaning that the cache is no longer effectivelly containing the data.

2)The block size can be observed to be 16, seen as when the stride value (entries skipped) surpasses this value, the cache misses drastically increase due to the fact that it has to constantly load in new blocks from memory, and never uses the same loaded block

3.1.2)
a)The main changes introduced in this code in order to analyse the L2 Data Cache misses in tendem with the previous processor events, was the addition of the code snippet:
/* Add L2 data cache misses to our Event Set */
    if (PAPI_add_event(EventSet, PAPI_L2_DCM) != PAPI_OK) {
        handle_error("add_event");
    }
and:
float const avg_misses_L2 = (float)(values[1]) / n_iterations;
The first instructions are responsible for adding the PAPI_L2_DCM to the EventSet tracked by PAPI, while the secons set of instructions print the reults into the table produced
